["pagename:1131 Проспект — Сайт","\u003cact9\u003e:\u003c!DOCTYPE html\u003e\n\u003chtml lang\u003d\"ru\"\u003e\n\u003chead\u003e\n\u003cmeta charset\u003d\"UTF-8\" /\u003e\n\u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1.0\" /\u003e\n\u003ctitle\u003e1131 Проспект\u003c/title\u003e\n\u003clink href\u003d\"https://fonts.googleapis.com/css2?family\u003dGoogle+Sans:wght@400;500;700\u0026display\u003dswap\" rel\u003d\"stylesheet\"\u003e\n\u003clink href\u003d\"https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css\" rel\u003d\"stylesheet\"\u003e\n\n\u003cstyle\u003e\n:root{\n  --red:#e60000;\n  --yellow:#ffd700;\n  --gray:#777;\n  --light-gray:#f4f4f4;\n  --text:#111;\n  --white:#fff;\n  --overlay: rgba(0,0,0,0.3);\n}\n*{box-sizing:border-box;margin:0;padding:0;font-family:\"Google Sans\",sans-serif}\nbody{\n  background:var(--white);\n  color:var(--text);\n  height:100vh;\n  display:flex;\n  flex-direction:column;\n  overflow:hidden;\n}\n.top-bar{\n  background:var(--red);\n  color:var(--white);\n  height:56px;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  font-weight:700;\n  font-size:22px;\n  position:fixed;\n  top:0;\n  width:100%;\n  z-index:50;\n  box-shadow:0 2px 6px rgba(0,0,0,0.15);\n  gap:12px;\n}\n.top-bar img{ height:28px; }\n\nmain{\n  flex:1;\n  overflow-y:auto;\n  padding-top:60px;\n  padding-bottom:70px;\n}\n.page{ display:none; padding:16px; animation:fadeIn .25s ease; }\n.page.active{ display:block; }\n@keyframes fadeIn{ from{opacity:0;transform:translateY(8px)} to{opacity:1;transform:none} }\n\n.post-card{\n  background:var(--light-gray);\n  border-radius:14px;\n  overflow:hidden;\n  margin-bottom:16px;\n  box-shadow:0 2px 8px rgba(0,0,0,0.05);\n  position:relative;\n}\n.post-card img{ width:100%; display:block; object-fit:cover; max-height:220px; }\n.post-info{ padding:14px; }\n.post-info h3{ color:var(--red); margin-bottom:6px; font-weight:600; }\n.post-info p{ color:var(--text); font-size:15px; }\n.post-date{\n  position:absolute; top:8px; right:12px;\n  background:var(--yellow); color:var(--text);\n  padding:3px 8px; border-radius:8px; font-size:12px; font-weight:500;\n}\n.post-actions{ display:flex; align-items:center; justify-content:space-between; padding:10px 14px 14px; }\n.actions-left{ display:flex; align-items:center; gap:14px; }\n.action{ display:flex; align-items:center; gap:6px; cursor:pointer; font-size:18px; background:var(--light-gray); padding:4px 8px; border-radius:8px; }\n.action span{ font-size:14px; }\n.action.liked{ color:var(--white); background:var(--red); }\n.action.disliked{ color:var(--white); background:var(--yellow); }\n.comment-btn{ display:flex; align-items:center; gap:6px; color:var(--gray); cursor:pointer; }\n\n.search-box{\n  display:flex; align-items:center; gap:10px;\n  background:var(--light-gray); border-radius:30px; padding:10px 14px;\n  border:1px solid #e9e9e9; margin-bottom:16px;\n}\n.search-box:focus-within{ box-shadow:0 0 0 4px rgba(230,0,0,0.06); border-color:var(--red); }\n.search-box i{ color:var(--gray); font-size:18px; }\n.search-box input{ border:none; outline:none; background:none; font-size:15px; flex:1; }\n\n.create-form{ display:flex; flex-direction:column; gap:12px; }\n.create-form label{ font-size:14px; color:var(--gray); }\n.create-form input[type\u003d\"text\"], .create-form textarea{\n  padding:10px; border-radius:8px; border:1px solid #ddd; background:var(--white); font-size:14px;\n}\n.create-form textarea{ resize:vertical; min-height:120px; }\n.create-form input[type\u003d\"file\"]{ padding:6px; }\n.submit-btn{\n  background:var(--red); color:var(--white); padding:10px 14px; border:none; border-radius:8px; cursor:pointer; font-weight:600;\n}\n\n.telegram-info{ text-align:center; margin-top:50px; }\n.tg-button{ display:inline-block; background:var(--red); color:var(--white); padding:10px 18px; border-radius:10px; text-decoration:none; }\n\n.auth-form{ display:flex; flex-direction:column; gap:16px; margin-top:20px; max-width:420px; margin-left:auto;margin-right:auto; background:#f4f4f4; padding:20px; border-radius:12px; }\n.auth-form input{ padding:12px; border-radius:8px; border:1px solid #ddd; width:100%; font-size:14px; }\n.auth-form button{ background:var(--red); color:white; padding:12px; border:none; border-radius:8px; cursor:pointer; font-weight:600; }\n.small-link{ color:var(--red); cursor:pointer; text-decoration:underline; text-align:center; }\n\n.profile-box{ text-align:center; background:#e8e8e8; padding:30px; border-radius:12px; }\n.profile-box img{ width:120px; height:120px; border-radius:50%; cursor:pointer; display:block; margin:0 auto 12px; }\n.profile-box h2{ margin-bottom:6px; font-size:20px; }\n.profile-box p{ color:var(--gray); }\n\n.overlay{ position:fixed; inset:0; background:var(--overlay); display:none; z-index:90; }\n.overlay.active{ display:block; }\n.comments-popup{\n  position:fixed; left:0; right:0; bottom:-100%; background:var(--white);\n  border-radius:14px 14px 0 0; padding:16px; max-height:60vh; overflow:auto; z-index:100; transition:0.32s;\n}\n.comments-popup.active{ bottom:0; }\n.comment-item{ border-bottom:1px solid #eee; padding:8px 0; }\n.comment-item strong{ color:var(--red); display:block; font-size:14px; }\n.comment-item p{ font-size:14px; color:var(--text); }\n.comment-form{ display:flex; gap:8px; margin-top:10px; }\n.comment-form input{ flex:1; padding:8px 10px; border-radius:8px; border:1px solid #ddd; }\n.comment-form button{ padding:8px 12px; background:var(--red); color:white; border:none; border-radius:8px; cursor:pointer; }\n\n.bottom-bar{\n  position:fixed; left:0; right:0; bottom:0; height:60px; background:var(--white);\n  display:flex; align-items:center; justify-content:space-around; border-top:1px solid #eee; z-index:50;\n}\n.bottom-bar button{ background:none; border:none; font-size:22px; color:#666; cursor:pointer; }\n.bottom-bar button.active{ color:var(--red); }\n\n.grid{ display:grid; grid-template-columns:1fr 1fr; gap:12px; }\n@media(max-width:700px){ .grid{ grid-template-columns:1fr } }\n\u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cheader class\u003d\"top-bar\"\u003e\n  \u003cspan style\u003d\"color:var(--yellow); font-weight:700; font-size:24px;\"\u003e1131\u003c/span\u003e\n  \u003cspan\u003eПроспект\u003c/span\u003e\n  \u003cimg src\u003d\"https://i.ibb.co/tpcPrDZM\" alt\u003d\"\"\u003e\n\u003c/header\u003e\n\n\u003cmain\u003e\n\u003csection class\u003d\"page active\" id\u003d\"home\"\u003e\u003c/section\u003e\n\n\u003csection class\u003d\"page\" id\u003d\"search\"\u003e\n  \u003cdiv class\u003d\"search-box\"\u003e\n    \u003ci class\u003d\"ri-search-line\"\u003e\u003c/i\u003e\n    \u003cinput id\u003d\"searchInput\" type\u003d\"text\" placeholder\u003d\"Поиск статей...\"\u003e\n  \u003c/div\u003e\n  \u003cdiv id\u003d\"searchResults\"\u003e\u003c/div\u003e\n\u003c/section\u003e\n\n\u003csection class\u003d\"page\" id\u003d\"add\" style\u003d\"display:none;\"\u003e\n  \u003cform id\u003d\"createForm\" class\u003d\"create-form\"\u003e\n    \u003clabel\u003eИзображение\u003c/label\u003e\n    \u003cinput id\u003d\"createImageFile\" type\u003d\"file\" accept\u003d\"image/*\"\u003e\n    \u003clabel\u003eЗаголовок\u003c/label\u003e\n    \u003cinput id\u003d\"createTitle\" type\u003d\"text\" placeholder\u003d\"Введите заголовок\" required\u003e\n    \u003clabel\u003eТекст\u003c/label\u003e\n    \u003ctextarea id\u003d\"createText\" rows\u003d\"5\" placeholder\u003d\"Введите текст статьи...\" required\u003e\u003c/textarea\u003e\n    \u003cbutton type\u003d\"submit\" class\u003d\"submit-btn\"\u003eГотово\u003c/button\u003e\n  \u003c/form\u003e\n\u003c/section\u003e\n\n\u003csection class\u003d\"page\" id\u003d\"telegram\"\u003e\n  \u003cdiv class\u003d\"telegram-info\"\u003e\n    \u003ch2\u003eНаш Telegram-канал\u003c/h2\u003e\n    \u003cp\u003eПодписывайся, чтобы не пропустить новости!\u003c/p\u003e\n    \u003ca href\u003d\"https://t.me/fck_131\" class\u003d\"tg-button\" target\u003d\"_blank\"\u003e\u003ci class\u003d\"ri-telegram-fill\"\u003e\u003c/i\u003e Перейти в Telegram\u003c/a\u003e\n  \u003c/div\u003e\n\u003c/section\u003e\n\n\u003csection class\u003d\"page\" id\u003d\"profile\"\u003e\n  \u003cdiv id\u003d\"authContainer\"\u003e\u003c/div\u003e\n\u003c/section\u003e\n\u003c/main\u003e\n\n\u003cdiv class\u003d\"overlay\" id\u003d\"overlay\"\u003e\u003c/div\u003e\n\u003cdiv class\u003d\"comments-popup\" id\u003d\"commentsPopup\" aria-hidden\u003d\"true\"\u003e\n  \u003cdiv style\u003d\"text-align:right\"\u003e\u003cbutton class\u003d\"close-comments\" style\u003d\"background:none;border:none;color:#888;cursor:pointer\"\u003e✖\u003c/button\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"commentsList\"\u003e\u003c/div\u003e\n  \u003cform id\u003d\"commentForm\" class\u003d\"comment-form\" onsubmit\u003d\"return false;\"\u003e\n    \u003cinput id\u003d\"commentInput\" type\u003d\"text\" placeholder\u003d\"Ваш комментарий\"\u003e\n    \u003cbutton id\u003d\"sendCommentBtn\" type\u003d\"button\"\u003eОтправить\u003c/button\u003e\n  \u003c/form\u003e\n\u003c/div\u003e\n\n\u003cnav class\u003d\"bottom-bar\"\u003e\n  \u003cbutton class\u003d\"nav-btn active\" data-page\u003d\"home\"\u003e\u003ci class\u003d\"ri-home-5-fill\"\u003e\u003c/i\u003e\u003c/button\u003e\n  \u003cbutton class\u003d\"nav-btn\" data-page\u003d\"search\"\u003e\u003ci class\u003d\"ri-search-line\"\u003e\u003c/i\u003e\u003c/button\u003e\n  \u003cbutton class\u003d\"nav-btn\" data-page\u003d\"add\"\u003e\u003ci class\u003d\"ri-add-circle-fill\"\u003e\u003c/i\u003e\u003c/button\u003e\n  \u003cbutton class\u003d\"nav-btn\" data-page\u003d\"telegram\"\u003e\u003ci class\u003d\"ri-telegram-fill\"\u003e\u003c/i\u003e\u003c/button\u003e\n  \u003cbutton class\u003d\"nav-btn\" data-page\u003d\"profile\"\u003e\u003ci class\u003d\"ri-user-3-fill\"\u003e\u003c/i\u003e\u003c/button\u003e\n\u003c/nav\u003e\n\n\u003cscript type\u003d\"module\"\u003e\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/10.1.0/firebase-app.js\";\nimport { getDatabase, ref, set, get, update } from \"https://www.gstatic.com/firebasejs/10.1.0/firebase-database.js\";\n\nconst firebaseConfig \u003d {\n  apiKey: \"AIzaSyCidNF4Y4KtInPicVuiHpsyM3UtnXfjHuI\",\n  authDomain: \"baseofsos.firebaseapp.com\",\n  databaseURL: \"https://baseofsos-default-rtdb.firebaseio.com\",\n  projectId: \"baseofsos\",\n  storageBucket: \"baseofsos.firebasestorage.app\",\n  messagingSenderId: \"543658307069\",\n  appId: \"1:543658307069:web:6089023d57da67ddeffd94\",\n  measurementId: \"G-X39SMCSECC\"\n};\nconst app \u003d initializeApp(firebaseConfig);\nconst db \u003d getDatabase(app);\n\nlet currentUser\u003dnull;\nconst myIP\u003d\"185.146.112.225\";\nconst navBtns\u003ddocument.querySelectorAll(\u0027.nav-btn\u0027);\nnavBtns.forEach(btn\u003d\u003e{\n  btn.addEventListener(\u0027click\u0027,()\u003d\u003e{\n    navBtns.forEach(b\u003d\u003eb.classList.remove(\u0027active\u0027));\n    btn.classList.add(\u0027active\u0027);\n    const page\u003dbtn.dataset.page;\n    document.querySelectorAll(\u0027.page\u0027).forEach(p\u003d\u003ep.classList.remove(\u0027active\u0027));\n    document.getElementById(page).classList.add(\u0027active\u0027);\n    if(page\u003d\u003d\u003d\u0027search\u0027) populateSearch();\n    if(page\u003d\u003d\u003d\u0027add\u0027) checkAddAccess();\n    if(page\u003d\u003d\u003d\u0027profile\u0027) renderProfile();\n  });\n});\n\nfunction checkAddAccess(){\n  fetch(\u0027https://api.ipify.org/?format\u003djson\u0027).then(res\u003d\u003eres.json()).then(data\u003d\u003e{\n    if(data.ip\u003d\u003d\u003dmyIP) document.getElementById(\u0027add\u0027).style.display\u003d\u0027block\u0027;\n    else document.getElementById(\u0027add\u0027).style.display\u003d\u0027none\u0027;\n  });\n}\n\n// --- Auth/Profile ---\nfunction renderAuth(){\n  const container\u003ddocument.getElementById(\u0027authContainer\u0027);\n  container.innerHTML\u003d`\n    \u003cdiv class\u003d\"auth-form\" id\u003d\"loginForm\"\u003e\n      \u003ch2\u003eВход\u003c/h2\u003e\n      \u003cinput id\u003d\"loginUser\" type\u003d\"text\" placeholder\u003d\"Username или Email\"\u003e\n      \u003cinput id\u003d\"loginPass\" type\u003d\"password\" placeholder\u003d\"Пароль\"\u003e\n      \u003cbutton id\u003d\"loginBtn\"\u003eВойти\u003c/button\u003e\n      \u003cp\u003eНет аккаунта? \u003cspan id\u003d\"toRegister\" class\u003d\"small-link\"\u003eРегистрация\u003c/span\u003e\u003c/p\u003e\n    \u003c/div\u003e\n    \u003cdiv class\u003d\"auth-form\" id\u003d\"registerForm\" style\u003d\"display:none;\"\u003e\n      \u003ch2\u003eРегистрация\u003c/h2\u003e\n      \u003cinput id\u003d\"regUsername\" type\u003d\"text\" placeholder\u003d\"Username (никнейм)\"\u003e\n      \u003cinput id\u003d\"regEmail\" type\u003d\"email\" placeholder\u003d\"Email\"\u003e\n      \u003cinput id\u003d\"regPass\" type\u003d\"password\" placeholder\u003d\"Пароль\"\u003e\n      \u003cbutton id\u003d\"registerBtn\"\u003eСоздать аккаунт\u003c/button\u003e\n      \u003cp\u003eУже есть аккаунт? \u003cspan id\u003d\"toLogin\" class\u003d\"small-link\"\u003eВойти\u003c/span\u003e\u003c/p\u003e\n    \u003c/div\u003e\n  `;\n  document.getElementById(\u0027toRegister\u0027).addEventListener(\u0027click\u0027,()\u003d\u003e{\n    document.getElementById(\u0027loginForm\u0027).style.display\u003d\u0027none\u0027;\n    document.getElementById(\u0027registerForm\u0027).style.display\u003d\u0027block\u0027;\n  });\n  document.getElementById(\u0027toLogin\u0027).addEventListener(\u0027click\u0027,()\u003d\u003e{\n    document.getElementById(\u0027registerForm\u0027).style.display\u003d\u0027none\u0027;\n    document.getElementById(\u0027loginForm\u0027).style.display\u003d\u0027block\u0027;\n  });\n  document.getElementById(\u0027registerBtn\u0027).addEventListener(\u0027click\u0027,async()\u003d\u003e{\n    const username\u003ddocument.getElementById(\u0027regUsername\u0027).value.trim();\n    const email\u003ddocument.getElementById(\u0027regEmail\u0027).value.trim();\n    const pass\u003ddocument.getElementById(\u0027regPass\u0027).value.trim();\n    if(!username||!email||!pass){ alert(\u0027Заполните все поля\u0027); return; }\n    await set(ref(db,`Accounts/${username}`),{email,password:pass,avatar:\u0027https://picsum.photos/120\u0027,likes:{},dislikes:{},comments:{}});\n    currentUser\u003dusername;\n    alert(\u0027Регистрация успешна!\u0027);\n    renderProfile();\n  });\n  document.getElementById(\u0027loginBtn\u0027).addEventListener(\u0027click\u0027,async()\u003d\u003e{\n    const loginUser\u003ddocument.getElementById(\u0027loginUser\u0027).value.trim();\n    const loginPass\u003ddocument.getElementById(\u0027loginPass\u0027).value.trim();\n    const snap\u003dawait get(ref(db,`Accounts/${loginUser}`));\n    if(!snap.exists()||snap.val().password!\u003d\u003dloginPass){ alert(\u0027Неверные данные\u0027); return; }\n    currentUser\u003dloginUser;\n    alert(\u0027Вход успешен!\u0027);\n    renderProfile();\n  });\n}\n\nasync function renderProfile(){\n  const container\u003ddocument.getElementById(\u0027authContainer\u0027);\n  if(!currentUser){ renderAuth(); return; }\n  const snap\u003dawait get(ref(db,`Accounts/${currentUser}`));\n  const user\u003dsnap.val();\n  container.innerHTML\u003d`\n    \u003cdiv class\u003d\"profile-box\"\u003e\n      \u003cimg src\u003d\"${user.avatar}\" id\u003d\"profileAvatar\"\u003e\n      \u003ch2\u003e${currentUser}\u003c/h2\u003e\n      \u003cp\u003e${user.email}\u003c/p\u003e\n    \u003c/div\u003e\n    \u003cdiv class\u003d\"profile-content\"\u003e\u003c/div\u003e\n  `;\n  document.getElementById(\u0027profileAvatar\u0027).addEventListener(\u0027click\u0027,async()\u003d\u003e{\n    const newAvatar\u003dprompt(\u0027Введите URL новой аватарки\u0027,user.avatar);\n    if(newAvatar){ await update(ref(db,`Accounts/${currentUser}`),{avatar:newAvatar}); renderProfile(); }\n  });\n}\n\n// --- Load posts ---\nasync function loadPosts(){\n  const snap\u003dawait get(ref(db,\u0027Posting\u0027));\n  const home\u003ddocument.getElementById(\u0027home\u0027);\n  home.innerHTML\u003d\u0027\u0027;\n  if(!snap.exists()) return;\n  const data\u003dsnap.val();\n  Object.keys(data).sort((a,b)\u003d\u003eb.localeCompare(a)).forEach(id\u003d\u003e{\n    const post\u003ddata[id];\n    const card\u003ddocument.createElement(\u0027div\u0027);\n    card.className\u003d\u0027post-card\u0027;\n    card.dataset.id\u003did;\n    card.innerHTML\u003d`\n      \u003cdiv class\u003d\"post-date\"\u003e${post.date}\u003c/div\u003e\n      \u003cimg src\u003d\"${post.img}\" alt\u003d\"\"\u003e\n      \u003cdiv class\u003d\"post-info\"\u003e\n        \u003ch3\u003e${post.title}\u003c/h3\u003e\n        \u003cp\u003e${post.text}\u003c/p\u003e\n      \u003c/div\u003e\n      \u003cdiv class\u003d\"post-actions\"\u003e\n        \u003cdiv class\u003d\"actions-left\"\u003e\n          \u003cdiv class\u003d\"action like ${post.likesBy \u0026\u0026 post.likesBy[currentUser]?\u0027liked\u0027:\u0027\u0027}\"\u003e\u003ci class\u003d\"ri-thumb-up-line\"\u003e\u003c/i\u003e \u003cspan\u003e${post.likes||0}\u003c/span\u003e\u003c/div\u003e\n          \u003cdiv class\u003d\"action dislike ${post.dislikesBy \u0026\u0026 post.dislikesBy[currentUser]?\u0027disliked\u0027:\u0027\u0027}\"\u003e\u003ci class\u003d\"ri-thumb-down-line\"\u003e\u003c/i\u003e \u003cspan\u003e${post.dislikes||0}\u003c/span\u003e\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class\u003d\"comment-btn\"\u003e\u003ci class\u003d\"ri-chat-3-line\"\u003e\u003c/i\u003e Комментировать\u003c/div\u003e\n      \u003c/div\u003e\n    `;\n    home.appendChild(card);\n  });\n}\n\nloadPosts();\n\n// --- Likes/Dislikes ---\ndocument.body.addEventListener(\u0027click\u0027,async e\u003d\u003e{\n  const card\u003de.target.closest(\u0027.post-card\u0027);\n  if(!card) return;\n  const postId\u003dcard.dataset.id;\n  const postRef\u003dref(db,`Posting/${postId}`);\n  const postSnap\u003dawait get(postRef);\n  const post\u003dpostSnap.val();\n  if(e.target.closest(\u0027.like\u0027)){\n    if(!currentUser){ alert(\u0027Сначала войдите\u0027); return; }\n    const likes\u003dpost.likes||0;\n    const dislikes\u003dpost.dislikes||0;\n    const likesBy\u003dpost.likesBy||{};\n    const dislikesBy\u003dpost.dislikesBy||{};\n    if(likesBy[currentUser]){ delete likesBy[currentUser]; await update(postRef,{likes:Object.keys(likesBy).length,likesBy}); }\n    else{ likesBy[currentUser]\u003dtrue; if(dislikesBy[currentUser]) delete dislikesBy[currentUser]; await update(postRef,{likes:Object.keys(likesBy).length,dislikes:Object.keys(dislikesBy).length,likesBy,dislikesBy}); }\n    loadPosts();\n  }\n  if(e.target.closest(\u0027.dislike\u0027)){\n    if(!currentUser){ alert(\u0027Сначала войдите\u0027); return; }\n    const likesBy\u003dpost.likesBy||{};\n    const dislikesBy\u003dpost.dislikesBy||{};\n    if(dislikesBy[currentUser]){ delete dislikesBy[currentUser]; await update(postRef,{dislikes:Object.keys(dislikesBy).length,dislikesBy}); }\n    else{ dislikesBy[currentUser]\u003dtrue; if(likesBy[currentUser]) delete likesBy[currentUser]; await update(postRef,{likes:Object.keys(likesBy).length,dislikes:Object.keys(dislikesBy).length,likesBy,dislikesBy}); }\n    loadPosts();\n  }\n});\n\n// --- Comments popup ---\nconst overlay\u003ddocument.getElementById(\u0027overlay\u0027);\nconst commentsPopup\u003ddocument.getElementById(\u0027commentsPopup\u0027);\nconst commentsList\u003ddocument.getElementById(\u0027commentsList\u0027);\nconst commentInput\u003ddocument.getElementById(\u0027commentInput\u0027);\nconst sendCommentBtn\u003ddocument.getElementById(\u0027sendCommentBtn\u0027);\n\ndocument.body.addEventListener(\u0027click\u0027,async e\u003d\u003e{\n  const card\u003de.target.closest(\u0027.post-card\u0027);\n  if(!card) return;\n  const postId\u003dcard.dataset.id;\n  const postRef\u003dref(db,`Posting/${postId}`);\n  if(e.target.closest(\u0027.comment-btn\u0027)){\n    overlay.classList.add(\u0027active\u0027);\n    commentsPopup.classList.add(\u0027active\u0027);\n    commentsPopup.dataset.postId\u003dpostId;\n    const snap\u003dawait get(postRef);\n    const postData\u003dsnap.val();\n    const comments\u003dpostData.comments||{};\n    commentsList.innerHTML\u003d\u0027\u0027;\n    Object.keys(comments).forEach(key\u003d\u003e{\n      const c\u003dcomments[key];\n      const div\u003ddocument.createElement(\u0027div\u0027);\n      div.className\u003d\u0027comment-item\u0027;\n      div.innerHTML\u003d`\u003cstrong\u003e${c.user}\u003c/strong\u003e\u003cp\u003e${c.text}\u003c/p\u003e`;\n      commentsList.appendChild(div);\n    });\n  }\n});\n\ndocument.querySelector(\u0027.close-comments\u0027).addEventListener(\u0027click\u0027,()\u003d\u003e{\n  overlay.classList.remove(\u0027active\u0027);\n  commentsPopup.classList.remove(\u0027active\u0027);\n  commentsList.innerHTML\u003d\u0027\u0027;\n  commentInput.value\u003d\u0027\u0027;\n});\n\nsendCommentBtn.addEventListener(\u0027click\u0027,async ()\u003d\u003e{\n  const text\u003dcommentInput.value.trim();\n  if(!text) return;\n  if(!currentUser){ alert(\u0027Сначала войдите\u0027); return; }\n  const postId\u003dcommentsPopup.dataset.postId;\n  const postRef\u003dref(db,`Posting/${postId}`);\n  const snap\u003dawait get(postRef);\n  const postData\u003dsnap.val();\n  const comments\u003dpostData.comments||{};\n  const newKey\u003dDate.now();\n  comments[newKey]\u003d{user:currentUser,text};\n  await update(postRef,{comments});\n  commentInput.value\u003d\u0027\u0027;\n  const div\u003ddocument.createElement(\u0027div\u0027);\n  div.className\u003d\u0027comment-item\u0027;\n  div.innerHTML\u003d`\u003cstrong\u003e${currentUser}\u003c/strong\u003e\u003cp\u003e${text}\u003c/p\u003e`;\n  commentsList.appendChild(div);\n});\n\n// --- Create post ---\ndocument.getElementById(\u0027createForm\u0027).addEventListener(\u0027submit\u0027,async e\u003d\u003e{\n  e.preventDefault();\n  if(!currentUser){ alert(\u0027Сначала войдите\u0027); return; }\n  const title\u003ddocument.getElementById(\u0027createTitle\u0027).value.trim();\n  const text\u003ddocument.getElementById(\u0027createText\u0027).value.trim();\n  const file\u003ddocument.getElementById(\u0027createImageFile\u0027).files[0];\n  if(!title||!text||!file){ alert(\u0027Заполните все поля\u0027); return; }\n  const reader\u003dnew FileReader();\n  reader.onload\u003dasync()\u003d\u003e{\n    const imgData\u003dreader.result;\n    const key\u003dDate.now();\n    await set(ref(db,`Posting/${key}`),{title,text,img:imgData,date:new Date().toLocaleDateString(),likes:0,dislikes:0,likesBy:{},dislikesBy:{},comments:{}});\n    alert(\u0027Статья создана!\u0027);\n    document.getElementById(\u0027createForm\u0027).reset();\n    loadPosts();\n  };\n  reader.readAsDataURL(file);\n});\n\n// --- Search ---\nasync function populateSearch(){\n  const input\u003ddocument.getElementById(\u0027searchInput\u0027);\n  const results\u003ddocument.getElementById(\u0027searchResults\u0027);\n  const snap\u003dawait get(ref(db,\u0027Posting\u0027));\n  const data\u003dsnap.val()||{};\n  results.innerHTML\u003d\u0027\u0027;\n  Object.keys(data).forEach(id\u003d\u003e{\n    const post\u003ddata[id];\n    const card\u003ddocument.createElement(\u0027div\u0027);\n    card.className\u003d\u0027post-card\u0027;\n    card.dataset.id\u003did;\n    card.innerHTML\u003d`\u003cdiv class\u003d\"post-info\"\u003e\u003ch3\u003e${post.title}\u003c/h3\u003e\u003cp\u003e${post.text}\u003c/p\u003e\u003c/div\u003e`;\n    results.appendChild(card);\n  });\n  input.addEventListener(\u0027input\u0027,()\u003d\u003e{\n    const val\u003dinput.value.toLowerCase();\n    results.querySelectorAll(\u0027.post-card\u0027).forEach(card\u003d\u003e{\n      const t\u003dcard.querySelector(\u0027h3\u0027).innerText.toLowerCase();\n      card.style.display\u003dt.includes(val)?\u0027block\u0027:\u0027none\u0027;\n    });\n  });\n}\n// --- XSS защита ---\nfunction sanitizeHTML(str) {\n  const temp \u003d document.createElement(\"div\");\n  temp.textContent \u003d str;\n  return temp.innerHTML;\n}\n\n// --- Восстановление пользователя при загрузке ---\nlet savedUser \u003d localStorage.getItem(\u0027currentUser\u0027);\nif (savedUser) {\n  currentUser \u003d savedUser;\n  renderProfile();\n}\n\n// --- Сохранение при регистрации / входе ---\nasync function register(username, email, pass) {\n  await set(ref(db,`Accounts/${username}`), {\n    email,\n    password: pass,\n    avatar:\u0027https://picsum.photos/120\u0027,\n    likes:{},dislikes:{},comments:{}\n  });\n  currentUser \u003d username;\n  localStorage.setItem(\u0027currentUser\u0027, username);\n  renderProfile();\n}\n\nasync function login(loginUser, loginPass) {\n  const snap \u003d await get(ref(db,`Accounts/${loginUser}`));\n  if(!snap.exists() || snap.val().password !\u003d\u003d loginPass){\n    alert(\u0027Неверные данные\u0027);\n    return;\n  }\n  currentUser \u003d loginUser;\n  localStorage.setItem(\u0027currentUser\u0027, loginUser);\n  renderProfile();\n}\n\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"]
